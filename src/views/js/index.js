(()=>{(()=>{var c=class u{constructor(t){this._key=t}static async create(t,n){let a=await u.generateEncryptionKey(t,n),s=await crypto.subtle.exportKey("raw",a);return localStorage.setItem("key",btoa(String.fromCharCode(...new Uint8Array(s)))),new u(a)}static async hashPassword(t,n){let a="SHA-256",s=new TextEncoder,l=await crypto.subtle.importKey("raw",s.encode(t),{name:"PBKDF2"},!1,["deriveBits"]),h=await crypto.subtle.deriveBits({name:"PBKDF2",salt:s.encode(n),iterations:1e5,hash:a},l,256);return btoa(String.fromCharCode(...new Uint8Array(h)))}static generateSalt(){let t=new Uint8Array(16);return crypto.getRandomValues(t),btoa(String.fromCharCode(...t))}static generateIv(){let t=new Uint8Array(12);return crypto.getRandomValues(t),btoa(String.fromCharCode(...t))}generateIv(){let t=new Uint8Array(12);return crypto.getRandomValues(t),btoa(String.fromCharCode(...t))}stringToBuffer(t){return Uint8Array.from(atob(t),n=>n.charCodeAt(0))}static async generateEncryptionKey(t,n){let a=await crypto.subtle.importKey("raw",new TextEncoder().encode(t),"PBKDF2",!1,["deriveKey"]);return crypto.subtle.deriveKey({name:"PBKDF2",salt:Uint8Array.from(atob(n),s=>s.charCodeAt(0)),iterations:1e5,hash:"SHA-256"},a,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"])}static async getKeyFromStorage(){let t=localStorage.getItem("key");if(!t)throw null;let n=Uint8Array.from(atob(t),a=>a.charCodeAt(0));return crypto.subtle.importKey("raw",n,{name:"AES-GCM"},!0,["encrypt","decrypt"])}async encrypt(t,n){let a=JSON.stringify(t),s=new TextEncoder().encode(a),l=this.stringToBuffer(n),h=await crypto.subtle.encrypt({name:"AES-GCM",iv:l},this._key,s);return btoa(String.fromCharCode(...new Uint8Array(h)))}async decrypt(t,n){let a=this.stringToBuffer(t),s=this.stringToBuffer(n),l=await crypto.subtle.decrypt({name:"AES-GCM",iv:s},this._key,a),h=new TextDecoder().decode(l);return JSON.parse(h)}},r=class{constructor(e){this.elem=document.createElement(e)}id(e){return this.elem.id=e,this}addClass(...e){return this.elem.classList.add(...e),this}text(e){return this.elem.textContent=e,this}type(e){return this.elem.type=e,this}placeholder(e){return this.elem.placeholder=e,this}onsubmit(e){return this.elem.onsubmit=e,this}onclick(e){return this.elem.onclick=e,this}min(e){return this.elem.min=e,this}step(e){return this.elem.step=e,this}required(){return this.elem.required=!0,this}focus(){return this.onConnect(()=>this.elem.focus()),this}toVar(e){return e(this.elem),this}append(e){return e instanceof this.constructor?this.elem.appendChild(e.elem):this.elem.appendChild(e),this}appendTo(e){return e instanceof this.constructor?e.elem.appendChild(this.elem):e.appendChild(this.elem),this}get(){return this.elem}onConnect(e){if(this.elem.isConnected)e();else{let t=new MutationObserver(()=>{this.elem.isConnected&&(t.disconnect(),e())});t.observe(document,{childList:!0,subtree:!0})}}},o=class{constructor(e,t){this.elem=new r("p").addClass("notifier",e).text(t).appendTo(document.body).get(),setTimeout(()=>{document.body.removeChild(this.elem)},7500)}},m=class{constructor(e,t,n){this._id=e,this._iv=t,this._name=n.name,this._balance=n.balance,this._income=n.income,this._bills=n.bills,this._allowances=n.allowances,this._transactions=[]}async addIncome(e,t){this._income.push({id:crypto.randomUUID(),name:e,amount:this.toCents(t)}),await this.save()}toCents(e){return typeof e=="string"&&(e=Number(e)),Math.round(e*100)}async save(){let e=JSON.stringify({name:this._name,balance:this._balance,income:this._income,bills:this._bills,allowances:this._allowances}),t=await encryptionHandler.encrypt(e,this._iv),n;try{n=await fetch("/api/account",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:this._id,data:t})})}catch{new o("error","Something went wrong, try refreshing the page")}n.error&&new o("error",n.error.message)}},p=class{constructor(e,t,n,a=[]){this._id=e,this._name=t,this._email=n,this._accounts=a,this._currentAccount=0}get account(){return this._accounts[this._currentAccount]}static async create(e,t,n){let a=c.generateSalt();return{name:e,email:t,password_hash:await c.hashPassword(n,a),password_salt:a,encryption_salt:c.generateSalt()}}addAccount(e){this._accounts.push(e)}changeAccount(e){if(typeof e=="number")this._currentAccount=0;else if(typeof e=="string"){for(let t=0;t<this._accounts.length;t++)if(this._accounts[t].id===e){this._currentAccount=t;break}}else for(let t=0;t<this._accounts.length;t++)if(this.__accounts[t]===e){this._currentAccount=t;break}}async decryptAndAddAccount(e){let t=await encryptionHandler.decrypt(e.data,e.iv),n=new m(e.id,e.iv,t);this._accounts.push(n)}},d=class{constructor(e){this.container=new r("div").id(e).addClass("page").appendTo(document.body).get()}close(){document.body.removeChild(this.container)}},w=class extends d{constructor(){super("Login"),this.render()}async submit(){event.preventDefault();let e=this.container.querySelector(".email").value,t=this.container.querySelector(".password").value;fetch("/api/user/salt",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e})}).then(n=>n.json()).then(n=>{if(n.error)throw n;let a=c.hashPassword(t,n.password_salt);return Promise.all([a,e,n.password_salt])}).then(n=>fetch("/api/user/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({password_hash:n[0],email:n[1],password_salt:n[2]})})).then(n=>n.json()).then(n=>{if(n.error)throw n;return window.user=new p(n.id,n.name,n.email,n.accounts),c.create(t,n.encryption_salt)}).then(n=>{window.encryptionHandler=n,changePage("home")}).catch(n=>{n.error?new o("error",n.error.message):new o("error","Something went wrong, try refreshing the page")})}render(){new r("form").addClass("standardForm").onsubmit(this.submit.bind(this)).append(new r("h1").text("Login")).append(new r("label").text("Email").append(new r("input").addClass("email").type("text").placeholder("Email").required().focus())).append(new r("label").text("Password").append(new r("input").addClass("password").type("password").placeholder("Password").required())).append(new r("button").text("Login")).append(new r("button").text("Create Account").addClass("link").type("button").onclick(()=>{changePage("register")})).appendTo(this.container)}},g=class extends d{constructor(){super("Register"),this.render()}async submit(){event.preventDefault();let e=this.container.querySelector(".name").value,t=this.container.querySelector(".email").value,n=this.container.querySelector(".password").value,a=this.container.querySelector(".confirmPassword").value;if(!this.isValidEmail(t)){new o("error","Invalid email address");return}if(n.length<10){new o("error","Password must contain at least 10 characters");return}if(n!==a){new o("error","Passwords do not match");return}fetch("/api/user",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(await p.create(e,t,n))}).then(s=>s.json()).then(s=>{if(s.error)throw s;return window.user=new p(s.id,s.name,s.email),EncryptionHandler.create(n,s.encryption_salt)}).then(s=>{window.encryptionHandler=s,changePage("home")}).catch(s=>{s.error?new o("error",s.error.message):new o("error","Something went wrong, try refreshing the page")})}isValidEmail(e){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)}render(){new r("form").addClass("standardForm").onsubmit(()=>{this.submit()}).append(new r("h1").text("Register")).append(new r("label").text("Name").append(new r("input").addClass("name").type("text").placeholder("Name").required().focus())).append(new r("label").text("Email").append(new r("input").addClass("email").type("email").placeholder("Email").required())).append(new r("label").text("Password").append(new r("input").addClass("password").type("password").placeholder("Password").required())).append(new r("label").text("Confirm Password").append(new r("input").addClass("confirmPassword").type("password").placeholder("Confirm Password").required())).append(new r("button").text("Create Account")).append(new r("button").text("Log In").addClass("link").type("button").onclick(()=>{changePage("login")})).appendTo(this.container)}},y=class extends d{constructor(){super("Home"),this.render()}render(){new r("div").addClass("buttonBox").append(new r("button").text("+").addClass("button","circle").onclick(()=>{changePage("addMenu")})).appendTo(this.container)}},b=class extends d{constructor(){super("AddMenu"),this.render()}render(){new r("button").text("New Account").addClass("button").onclick(()=>{changePage("createAccount")}).appendTo(this.container),new r("button").text("New Income").addClass("button").onclick(()=>{changePage("createIncome")}).appendTo(this.container)}},C=class extends d{constructor(){super("CreateAccount"),this.render()}async submit(){event.preventDefault();let e={name:this.container.querySelector(".name").value,balance:this.container.querySelector(".balance").value,income:[],bills:[],allowances:[]},t=encryptionHandler.generateIv(),n=await encryptionHandler.encrypt(e,t);fetch("/api/account",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({data:n,iv:t})}).then(a=>a.json()).then(a=>{if(a.error)throw a;let s=new m(a.id,t,e);user.addAccount(s),user.changeAccount(s),changePage("home")}).catch(a=>{console.log(a),a.error?new o("error",a.error.message):new o("error","Something went wrong, try refreshing the page")})}render(){new r("form").addClass("standardForm").onsubmit(this.submit.bind(this)).append(new r("h1").text("Create Account")).append(new r("label").text("Account Name").append(new r("input").type("text").addClass("name").placeholder("Account Name").required().focus())).append(new r("label").text("Current Balance").append(new r("input").type("number").addClass("balance").placeholder("Current Balance").min("0").step("0.01").required())).append(new r("button").text("Create")).append(new r("button").text("Cancel").type("button").addClass("cancel").onclick(()=>{changePage("home")})).appendTo(this.container)}},f=class extends d{constructor(){super("CreateIncome"),this.render()}async submit(e){e.preventDefault(),await user.account.addIncome(this.container.querySelector(".name").value,this.container.querySelector(".amount").value),changePage("home")}render(){new r("form").addClass("standardForm").onsubmit(this.submit.bind(this)).append(new r("h1").text("Create Income")).append(new r("label").text("Name").append(new r("input").type("text").addClass("name").placeholder("Name").required().focus())).append(new r("label").text("Amount").append(new r("input").type("number").addClass("amount").placeholder("Amount").min("0").step("0.01").required())).append(new r("button").text("Create")).append(new r("button").text("Cancel").addClass("cancel").type("button").onclick(()=>{changePage("home")})).appendTo(this.container)}},S=document.querySelector(".page"),i;window.changePage=(e,t)=>{switch(console.time("change page"),i.close(),e){case"login":i=new w;break;case"register":i=new g;break;case"home":i=new y;break;case"addMenu":i=new b;break;case"createAccount":i=new C;break;case"createIncome":i=new f;break}console.timeEnd("change page")},fetch("/api/user",{method:"GET",headers:{"Content-Type":"application/json"}}).then(e=>e.json()).then(e=>{if(e.error)throw e;return window.user=new p(e.id,e.name,e.email),Promise.all([c.getKeyFromStorage(),e.accounts])}).then(([e,t])=>{window.encryptionHandler=new c(e);let n=[];for(let a=0;a<t.length;a++)n.push(user.decryptAndAddAccount(t[a]));return Promise.all(n)}).then(e=>{i=new y}).catch(e=>{i=new w})})();})();
//# sourceMappingURL=index.js.map

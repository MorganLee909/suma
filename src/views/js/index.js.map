{
  "version": 3,
  "sources": ["EncryptionHandler.js", "Elem.js", "Notifier.js", "data/Account.js", "data/User.js", "pages/Page.js", "pages/Login.js", "pages/Register.js", "pages/Home.js", "pages/AddMenu.js", "pages/CreateAccount.js", "pages/CreateIncome.js", "index.js"],
  "sourcesContent": ["export default class EncryptionHandler {\n    constructor(key){\n        this._key = key;\n    }\n\n    static async create(password, salt){\n        const key = await EncryptionHandler.generateEncryptionKey(password, salt);\n        const raw = await crypto.subtle.exportKey(\"raw\", key);\n        localStorage.setItem(\"key\", btoa(String.fromCharCode(...new Uint8Array(raw))));\n        return new EncryptionHandler(key);\n    }\n\n    static async hashPassword(password, salt){\n        const iterations = 100000;\n        const hash = \"SHA-256\";\n        const encoder = new TextEncoder();\n\n        const baseKey = await crypto.subtle.importKey(\n            \"raw\",\n            encoder.encode(password),\n            {name: \"PBKDF2\"},\n            false,\n            [\"deriveBits\"]\n        );\n\n        const derivedBits = await crypto.subtle.deriveBits(\n            {\n                name: \"PBKDF2\",\n                salt: encoder.encode(salt),\n                iterations,\n                hash\n            },\n            baseKey,\n            256\n        );\n\n        return btoa(String.fromCharCode(...new Uint8Array(derivedBits)));\n    }\n\n    static generateSalt(){\n        const length = 16;\n        const salt = new Uint8Array(length);\n        crypto.getRandomValues(salt);\n        return btoa(String.fromCharCode(...salt));\n    }\n\n    static generateIv(){\n        const length = 12;\n        const iv = new Uint8Array(length);\n        crypto.getRandomValues(iv);\n        return btoa(String.fromCharCode(...iv));\n    }\n\n    generateIv(){\n        const length = 12;\n        const iv = new Uint8Array(length);\n        crypto.getRandomValues(iv);\n        return btoa(String.fromCharCode(...iv));\n    }\n\n    stringToBuffer(str){\n        return Uint8Array.from(atob(str), c => c.charCodeAt(0));\n    }\n\n    static async generateEncryptionKey(password, salt){\n        const passwordKey = await crypto.subtle.importKey(\n            \"raw\",\n            new TextEncoder().encode(password),\n            \"PBKDF2\",\n            false,\n            [\"deriveKey\"]\n        );\n\n        return crypto.subtle.deriveKey(\n            {\n                name: \"PBKDF2\",\n                salt: Uint8Array.from(atob(salt), c => c.charCodeAt(0)),\n                iterations: 100000,\n                hash: \"SHA-256\"\n            },\n            passwordKey,\n            {\n                name: \"AES-GCM\",\n                length: 256\n            },\n            true,\n            [\"encrypt\", \"decrypt\"]\n        );\n    }\n\n    static async getKeyFromStorage(){\n        let key = localStorage.getItem(\"key\");\n        if(!key) throw null;\n\n        const raw = Uint8Array.from(atob(key), c => c.charCodeAt(0));\n        return crypto.subtle.importKey(\n            \"raw\",\n            raw,\n            {name: \"AES-GCM\"},\n            true,\n            [\"encrypt\", \"decrypt\"]\n        );\n    }\n\n    async encrypt(data, iv){\n        const json = JSON.stringify(data);\n        const buff = new TextEncoder().encode(json);\n        const buffIv = this.stringToBuffer(iv);\n\n        const encrypted = await crypto.subtle.encrypt(\n            {\n                name: \"AES-GCM\",\n                iv: buffIv\n            },\n            this._key,\n            buff\n        );\n\n        let response = btoa(String.fromCharCode(...new Uint8Array(encrypted)));\n        return response;\n    }\n\n    async decrypt(data, ivString){\n        const encrypted = this.stringToBuffer(data);\n        const iv = this.stringToBuffer(ivString);\n\n        const decrypted = await crypto.subtle.decrypt(\n            {\n                name: \"AES-GCM\",\n                iv,\n            },\n            this._key,\n            encrypted\n        );\n\n        const json = new TextDecoder().decode(decrypted);\n        let response = JSON.parse(json);\n        return response;\n    }\n}\n", "export default class Elem {\n    constructor(elem){\n        this.elem = document.createElement(elem);\n    }\n\n    id(v){\n        this.elem.id = v;\n        return this;\n    }\n\n    addClass(...v){\n        this.elem.classList.add(...v);\n        return this;\n    }\n\n    text(v){\n        this.elem.textContent = v;\n        return this;\n    }\n\n    type(v){\n        this.elem.type = v;\n        return this;\n    }\n\n    placeholder(v){\n        this.elem.placeholder = v;\n        return this;\n    }\n\n    onsubmit(v){\n        this.elem.onsubmit = v;\n        return this;\n    }\n\n    onclick(v){\n        this.elem.onclick = v;\n        return this;\n    }\n\n    min(v){\n        this.elem.min = v;\n        return this;\n    }\n\n    step(v){\n        this.elem.step = v;\n        return this;\n    }\n\n    required(){\n        this.elem.required = true;\n        return this;\n    }\n\n    focus(){\n        this.onConnect(()=>this.elem.focus());\n        return this;\n    }\n\n    toVar(v){\n        v(this.elem);\n        return this;\n    }\n\n    append(v){\n        if(v instanceof this.constructor){\n            this.elem.appendChild(v.elem);\n        }else{\n            this.elem.appendChild(v);\n        }\n        return this;\n    }\n\n    appendTo(v){\n        if(v instanceof this.constructor){\n            v.elem.appendChild(this.elem);\n        }else{\n            v.appendChild(this.elem);\n        }\n        return this;\n    }\n\n    get(){\n        return this.elem;\n    }\n\n    onConnect(cb){\n        if(this.elem.isConnected){\n            cb();\n        }else {\n            const observer = new MutationObserver(()=>{\n                if(this.elem.isConnected) {\n                    observer.disconnect();\n                    cb();\n                }\n            });\n            observer.observe(document, {childList: true, subtree: true});\n        }\n    }\n}\n", "import Elem from \"./Elem.js\";\n\nexport default class Notifier{\n    constructor(type, message){\n        this.elem = new Elem(\"p\")\n            .addClass(\"notifier\", type)\n            .text(message)\n            .appendTo(document.body)\n            .get();\n\n        setTimeout(()=>{\n            document.body.removeChild(this.elem);\n        }, 7500);\n    }\n}\n", "import EncryptionHandler from \"../EncryptionHandler.js\";\nimport Notifier from \"../Notifier.js\";\n\nexport default class Account{\n    constructor(id, iv, data){\n        this._id = id;\n        this._iv = iv;\n        this._name = data.name;\n        this._balance = data.balance;\n        this._income = data.income;\n        this._bills = data.bills;\n        this._allowances = data.allowances;\n        this._transactions = [];\n    }\n\n    async addIncome(name, amount){\n        this._income.push({\n            id: crypto.randomUUID(),\n            name: name,\n            amount: this.toCents(amount)\n        });\n\n        await this.save();\n    }\n\n    toCents(num){\n        if(typeof num === \"string\") num = Number(num);\n\n        return Math.round(num * 100);\n    }\n\n    async save(){\n        const data = JSON.stringify({\n            name: this._name,\n            balance: this._balance,\n            income: this._income,\n            bills: this._bills,\n            allowances: this._allowances\n        });\n        const encryptedData = await encryptionHandler.encrypt(data, this._iv);\n\n        let response\n        try{\n            response = await fetch(\"/api/account\", {\n                method: \"PUT\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    id: this._id,\n                    data: encryptedData\n                })\n            });\n        }catch(e){\n            new Notifier(\"error\", \"Something went wrong, try refreshing the page\");\n        }\n\n        if(response.error) new Notifier(\"error\", response.error.message);\n    }\n}\n", "import EncryptionHandler from \"../EncryptionHandler.js\";\nimport Account from \"./Account.js\";\n\nexport default class User{\n    constructor(id, name, email, accounts = []){\n        this._id = id;\n        this._name = name;\n        this._email = email;\n        this._accounts = accounts;\n        this._currentAccount = 0;\n    }\n\n    get account(){\n        return this._accounts[this._currentAccount];\n    }\n\n    static async create(name, email, password){\n        const passwordSalt = EncryptionHandler.generateSalt();\n\n        return {\n            name: name,\n            email: email,\n            password_hash: await EncryptionHandler.hashPassword(password, passwordSalt),\n            password_salt: passwordSalt,\n            encryption_salt: EncryptionHandler.generateSalt()\n        };\n    }\n\n    addAccount(account){\n        this._accounts.push(account);\n    }\n\n    changeAccount(account){\n        if(typeof account === \"number\"){\n            this._currentAccount = 0;\n        }else if(typeof account === \"string\"){\n            for(let i = 0; i < this._accounts.length; i++){\n                if(this._accounts[i].id === account){\n                    this._currentAccount = i;\n                    break;\n                }\n            }\n        }else{\n            for(let i = 0; i < this._accounts.length; i++){\n                if(this.__accounts[i] === account){\n                    this._currentAccount = i;\n                    break;\n                }\n            }\n        }\n    }\n\n    async decryptAndAddAccount(account){\n        const data = await encryptionHandler.decrypt(account.data, account.iv);\n\n        const newAccount = new Account(account.id, account.iv, data);\n        this._accounts.push(newAccount);\n    }\n}\n", "import Elem from \"../Elem.js\";\n\nexport default class Page {\n    constructor(page){\n        this.container = new Elem(\"div\")\n            .id(page)\n            .addClass(\"page\")\n            .appendTo(document.body)\n            .get();\n    }\n\n    close(){\n        document.body.removeChild(this.container);\n    }\n}\n", "import Page from \"./Page.js\";\nimport Elem from \"../Elem.js\";\nimport EncryptionHandler from \"../EncryptionHandler.js\";\nimport User from \"../data/User.js\";\nimport Notifier from \"../Notifier.js\";\n\nexport default class Login extends Page{\n    constructor(){\n        super(\"Login\");\n\n        this.render();\n    }\n\n    async submit(){\n        event.preventDefault();\n\n        const email = this.container.querySelector(\".email\").value;\n        const password = this.container.querySelector(\".password\").value;\n\n        fetch(\"/api/user/salt\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({email})\n        })\n            .then(r=>r.json())\n            .then((response)=>{\n                if(response.error) throw response;\n\n                let hashPromise = EncryptionHandler.hashPassword(password, response.password_salt);\n                return Promise.all([hashPromise, email, response.password_salt]);\n            })\n            .then((data)=>{\n                return fetch(\"/api/user/login\", {\n                    method: \"POST\",\n                    headers: {\"Content-Type\": \"application/json\"},\n                    body: JSON.stringify({\n                        password_hash: data[0],\n                        email: data[1],\n                        password_salt: data[2]\n                    })\n                });\n            })\n            .then(r=>r.json())\n            .then((response)=>{\n                if(response.error) throw response;\n\n                window.user = new User(\n                    response.id,\n                    response.name,\n                    response.email,\n                    response.accounts\n                );\n                return EncryptionHandler.create(password, response.encryption_salt);\n            })\n            .then((encryptionHandler)=>{\n                window.encryptionHandler = encryptionHandler;\n                changePage(\"home\");\n            })\n            .catch((err)=>{\n                if(err.error){\n                    new Notifier(\"error\", err.error.message);\n                }else{\n                    new Notifier(\"error\", \"Something went wrong, try refreshing the page\");\n                }\n            });\n    }\n\n    render(){\n        new Elem(\"form\")\n            .addClass(\"standardForm\")\n            .onsubmit(this.submit.bind(this))\n            .append(new Elem(\"h1\")\n                .text(\"Login\")\n            )\n            .append(new Elem(\"label\")\n                .text(\"Email\")\n                .append(new Elem(\"input\")\n                    .addClass(\"email\")\n                    .type(\"text\")\n                    .placeholder(\"Email\")\n                    .required()\n                    .focus()\n                )\n            )\n            .append(new Elem(\"label\")\n                .text(\"Password\")\n                .append(new Elem(\"input\")\n                    .addClass(\"password\")\n                    .type(\"password\")\n                    .placeholder(\"Password\")\n                    .required()\n                )\n            )\n            .append(new Elem(\"button\")\n                .text(\"Login\")\n            )\n            .append(new Elem(\"button\")\n                .text(\"Create Account\")\n                .addClass(\"link\")\n                .type(\"button\")\n                .onclick(()=>{changePage(\"register\")})\n            )\n            .appendTo(this.container);\n    }\n}\n", "import Page from \"./Page.js\";\nimport Elem from \"../Elem.js\";\nimport User from \"../data/User.js\";\nimport Notifier from \"../Notifier.js\";\n\nexport default class Register extends Page{\n    constructor(){\n        super(\"Register\");\n\n        this.render();\n    }\n\n    async submit(){\n        event.preventDefault();\n\n        const name = this.container.querySelector(\".name\").value;\n        const email = this.container.querySelector(\".email\").value;\n        const password = this.container.querySelector(\".password\").value;\n        const confirmPassword = this.container.querySelector(\".confirmPassword\").value;\n\n        if(!this.isValidEmail(email)){\n            new Notifier(\"error\", \"Invalid email address\");\n            return;\n        }\n\n        if(password.length < 10){\n            new Notifier(\"error\", \"Password must contain at least 10 characters\");\n            return;\n        }\n\n        if(password !== confirmPassword){\n            new Notifier(\"error\", \"Passwords do not match\");\n            return;\n        }\n\n        fetch(\"/api/user\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(await User.create(name, email, password))\n        })\n            .then(r=>r.json())\n            .then((response)=>{\n                if(response.error) throw response;\n\n                window.user = new User(\n                    response.id,\n                    response.name,\n                    response.email\n                );\n                return EncryptionHandler.create(password, response.encryption_salt);\n            })\n            .then((encryptionHandler)=>{\n                window.encryptionHandler = encryptionHandler;\n                changePage(\"home\");\n            })\n            .catch((err)=>{\n                if(err.error){\n                    new Notifier(\"error\", err.error.message);\n                }else{\n                    new Notifier(\"error\", \"Something went wrong, try refreshing the page\");\n                }\n            });\n    }\n\n    isValidEmail(email){\n        const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return regex.test(email);\n    }\n\n    render(){\n        new Elem(\"form\")\n            .addClass(\"standardForm\")\n            .onsubmit(()=>{this.submit()})\n            .append(new Elem(\"h1\")\n                .text(\"Register\")\n            )\n            .append(new Elem(\"label\")\n                .text(\"Name\")\n                .append(new Elem(\"input\")\n                    .addClass(\"name\")\n                    .type(\"text\")\n                    .placeholder(\"Name\")\n                    .required()\n                    .focus()\n                )\n            )\n            .append(new Elem(\"label\")\n                .text(\"Email\")\n                .append(new Elem(\"input\")\n                    .addClass(\"email\")\n                    .type(\"email\")\n                    .placeholder(\"Email\")\n                    .required()\n                )\n            )\n            .append(new Elem(\"label\")\n                .text(\"Password\")\n                .append(new Elem(\"input\")\n                    .addClass(\"password\")\n                    .type(\"password\")\n                    .placeholder(\"Password\")\n                    .required()\n                )\n            )\n            .append(new Elem(\"label\")\n                .text(\"Confirm Password\")\n                .append(new Elem(\"input\")\n                    .addClass(\"confirmPassword\")\n                    .type(\"password\")\n                    .placeholder(\"Confirm Password\")\n                    .required()\n                )\n            )\n            .append(new Elem(\"button\")\n                .text(\"Create Account\")\n            )\n            .append(new Elem(\"button\")\n                .text(\"Log In\")\n                .addClass(\"link\")\n                .type(\"button\")\n                .onclick(()=>{changePage(\"login\")})\n            )\n            .appendTo(this.container);\n    }\n}\n", "import Page from \"./Page.js\";\nimport Elem from \"../Elem.js\";\n\nexport default class Home extends Page{\n    constructor(){\n        super(\"Home\");\n\n        this.render();\n    }\n\n    render(){\n        new Elem(\"div\")\n            .addClass(\"buttonBox\")\n            .append(new Elem(\"button\")\n                .text(\"+\")\n                .addClass(\"button\", \"circle\")\n                .onclick(()=>{changePage(\"addMenu\")})\n            )\n            .appendTo(this.container);\n    }\n}\n", "import Page from \"./Page.js\";\nimport Elem from \"../Elem.js\";\n\nexport default class AddMenu extends Page{\n    constructor(){\n        super(\"AddMenu\");\n\n        this.render();\n    }\n\n    render(){\n        new Elem(\"button\")\n            .text(\"New Account\")\n            .addClass(\"button\")\n            .onclick(()=>{changePage(\"createAccount\")})\n            .appendTo(this.container);\n\n        new Elem(\"button\")\n            .text(\"New Income\")\n            .addClass(\"button\")\n            .onclick(()=>{changePage(\"createIncome\")})\n            .appendTo(this.container);\n    }\n}\n", "import Page from \"./Page.js\";\nimport Elem from \"../Elem.js\";\nimport Notifier from \"../Notifier.js\";\nimport Account from \"../data/Account.js\";\n\nexport default class CreateAccount extends Page{\n    constructor(){\n        super(\"CreateAccount\");\n\n        this.render();\n    }\n\n    async submit(){\n        event.preventDefault();\n\n        const data = {\n            name: this.container.querySelector(\".name\").value,\n            balance: this.container.querySelector(\".balance\").value,\n            income: [],\n            bills: [],\n            allowances: []\n        };\n        const iv = encryptionHandler.generateIv();\n        const encryptedData = await encryptionHandler.encrypt(data, iv);\n\n        fetch(\"/api/account\", {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                data: encryptedData,\n                iv: iv\n            })\n        })\n            .then(r=>r.json())\n            .then((response)=>{\n                if(response.error) throw response;\n\n                const account = new Account(response.id, iv, data);\n                user.addAccount(account);\n                user.changeAccount(account);\n                changePage(\"home\");\n            })\n            .catch((err)=>{\n                console.log(err);\n                if(err.error){\n                    new Notifier(\"error\", err.error.message);\n                }else{\n                    new Notifier(\"error\", \"Something went wrong, try refreshing the page\");\n                }\n            });\n    }\n\n    render(){\n        new Elem(\"form\")\n            .addClass(\"standardForm\")\n            .onsubmit(this.submit.bind(this))\n            .append(new Elem(\"h1\")\n                .text(\"Create Account\")\n            )\n            .append(new Elem(\"label\")\n                .text(\"Account Name\")\n                .append(new Elem(\"input\")\n                    .type(\"text\")\n                    .addClass(\"name\")\n                    .placeholder(\"Account Name\")\n                    .required()\n                    .focus()\n                )\n            )\n            .append(new Elem(\"label\")\n                .text(\"Current Balance\")\n                .append(new Elem(\"input\")\n                    .type(\"number\")\n                    .addClass(\"balance\")\n                    .placeholder(\"Current Balance\")\n                    .min(\"0\")\n                    .step(\"0.01\")\n                    .required()\n                )\n            )\n            .append(new Elem(\"button\")\n                .text(\"Create\")\n            )\n            .append(new Elem(\"button\")\n                .text(\"Cancel\")\n                .type(\"button\")\n                .addClass(\"cancel\")\n                .onclick(()=>{changePage(\"home\")})\n            )\n            .appendTo(this.container);\n    }\n}\n", "import Page from \"./Page.js\";\nimport Elem from \"../Elem.js\";\n\nexport default class CreateIncome extends Page{\n    constructor(){\n        super(\"CreateIncome\");\n\n        this.render();\n    }\n\n    async submit(event){\n        event.preventDefault();\n\n        await user.account.addIncome(\n            this.container.querySelector(\".name\").value,\n            this.container.querySelector(\".amount\").value\n        );\n        changePage(\"home\");\n    }\n\n    render(){\n        new Elem(\"form\")\n            .addClass(\"standardForm\")\n            .onsubmit(this.submit.bind(this))\n            .append(new Elem(\"h1\")\n                .text(\"Create Income\")\n            )\n            .append(new Elem(\"label\")\n                .text(\"Name\")\n                .append(new Elem(\"input\")\n                    .type(\"text\")\n                    .addClass(\"name\")\n                    .placeholder(\"Name\")\n                    .required()\n                    .focus()\n                )\n            )\n            .append(new Elem(\"label\")\n                .text(\"Amount\")\n                .append(new Elem(\"input\")\n                    .type(\"number\")\n                    .addClass(\"amount\")\n                    .placeholder(\"Amount\")\n                    .min(\"0\")\n                    .step(\"0.01\")\n                    .required()\n                )\n            )\n            .append(new Elem(\"button\")\n                .text(\"Create\")\n            )\n            .append(new Elem(\"button\")\n                .text(\"Cancel\")\n                .addClass(\"cancel\")\n                .type(\"button\")\n                .onclick(()=>{changePage(\"home\")})\n            )\n            .appendTo(this.container);\n    }\n}\n", "import EncryptionHandler from \"./EncryptionHandler.js\";\nimport User from \"./data/User.js\";\n\nimport Login from \"./pages/Login.js\";\nimport Register from \"./pages/Register.js\";\nimport Home from \"./pages/Home.js\";\nimport AddMenu from \"./pages/AddMenu.js\";\nimport CreateAccount from \"./pages/CreateAccount.js\";\nimport CreateIncome from \"./pages/CreateIncome.js\";\n\nconst pages = document.querySelector(\".page\");\nlet currentPage;\n\nwindow.changePage = (page, data)=>{\n    console.time(\"change page\");\n    currentPage.close();\n\n    switch(page){\n        case \"login\": currentPage = new Login(); break;\n        case \"register\": currentPage = new Register(); break;\n        case \"home\": currentPage = new Home(); break;\n        case \"addMenu\": currentPage = new AddMenu(); break;\n        case \"createAccount\": currentPage = new CreateAccount(); break;\n        case \"createIncome\": currentPage = new CreateIncome(); break;\n    }\n    console.timeEnd(\"change page\");\n}\n\nfetch(\"/api/user\", {\n    method: \"GET\",\n    headers: {\"Content-Type\": \"application/json\"},\n})\n    .then(r=>r.json())\n    .then((response)=>{\n        if(response.error) throw response;\n\n        window.user = new User(\n            response.id,\n            response.name,\n            response.email,\n        );\n\n        return Promise.all([EncryptionHandler.getKeyFromStorage(), response.accounts]);\n    })\n    .then(([key, accounts])=>{\n        window.encryptionHandler = new EncryptionHandler(key);\n\n        let promises = [];\n        for(let i = 0; i < accounts.length; i++){\n            promises.push(user.decryptAndAddAccount(accounts[i]));\n        }\n\n        return Promise.all(promises);\n    })\n    .then((response)=>{\n        currentPage = new Home();\n    })\n    .catch((err)=>{\n        currentPage = new Login();\n    });\n"],
  "mappings": "YAAA,IAAqBA,EAArB,MAAqBC,CAAkB,CACnC,YAAYC,EAAI,CACZ,KAAK,KAAOA,CAChB,CAEA,aAAa,OAAOC,EAAUC,EAAK,CAC/B,IAAMF,EAAM,MAAMD,EAAkB,sBAAsBE,EAAUC,CAAI,EAClEC,EAAM,MAAM,OAAO,OAAO,UAAU,MAAOH,CAAG,EACpD,OAAA,aAAa,QAAQ,MAAO,KAAK,OAAO,aAAa,GAAG,IAAI,WAAWG,CAAG,CAAC,CAAC,CAAC,EACtE,IAAIJ,EAAkBC,CAAG,CACpC,CAEA,aAAa,aAAaC,EAAUC,EAAK,CAErC,IAAME,EAAO,UACPC,EAAU,IAAI,YAEdC,EAAU,MAAM,OAAO,OAAO,UAChC,MACAD,EAAQ,OAAOJ,CAAQ,EACvB,CAAC,KAAM,QAAQ,EACf,GACA,CAAC,YAAY,CACjB,EAEMM,EAAc,MAAM,OAAO,OAAO,WACpC,CACI,KAAM,SACN,KAAMF,EAAQ,OAAOH,CAAI,EACzB,WAAA,IACA,KAAAE,CACJ,EACAE,EACA,GACJ,EAEA,OAAO,KAAK,OAAO,aAAa,GAAG,IAAI,WAAWC,CAAW,CAAC,CAAC,CACnE,CAEA,OAAO,cAAc,CAEjB,IAAML,EAAO,IAAI,WAAW,EAAM,EAClC,OAAA,OAAO,gBAAgBA,CAAI,EACpB,KAAK,OAAO,aAAa,GAAGA,CAAI,CAAC,CAC5C,CAEA,OAAO,YAAY,CAEf,IAAMM,EAAK,IAAI,WAAW,EAAM,EAChC,OAAA,OAAO,gBAAgBA,CAAE,EAClB,KAAK,OAAO,aAAa,GAAGA,CAAE,CAAC,CAC1C,CAEA,YAAY,CAER,IAAMA,EAAK,IAAI,WAAW,EAAM,EAChC,OAAA,OAAO,gBAAgBA,CAAE,EAClB,KAAK,OAAO,aAAa,GAAGA,CAAE,CAAC,CAC1C,CAEA,eAAeC,EAAI,CACf,OAAO,WAAW,KAAK,KAAKA,CAAG,EAAGC,GAAKA,EAAE,WAAW,CAAC,CAAC,CAC1D,CAEA,aAAa,sBAAsBT,EAAUC,EAAK,CAC9C,IAAMS,EAAc,MAAM,OAAO,OAAO,UACpC,MACA,IAAI,YAAY,EAAE,OAAOV,CAAQ,EACjC,SACA,GACA,CAAC,WAAW,CAChB,EAEA,OAAO,OAAO,OAAO,UACjB,CACI,KAAM,SACN,KAAM,WAAW,KAAK,KAAKC,CAAI,EAAGQ,GAAKA,EAAE,WAAW,CAAC,CAAC,EACtD,WAAY,IACZ,KAAM,SACV,EACAC,EACA,CACI,KAAM,UACN,OAAQ,GACZ,EACA,GACA,CAAC,UAAW,SAAS,CACzB,CACJ,CAEA,aAAa,mBAAmB,CAC5B,IAAIX,EAAM,aAAa,QAAQ,KAAK,EACpC,GAAG,CAACA,EAAK,MAAM,KAEf,IAAMG,EAAM,WAAW,KAAK,KAAKH,CAAG,EAAGU,GAAKA,EAAE,WAAW,CAAC,CAAC,EAC3D,OAAO,OAAO,OAAO,UACjB,MACAP,EACA,CAAC,KAAM,SAAS,EAChB,GACA,CAAC,UAAW,SAAS,CACzB,CACJ,CAEA,MAAM,QAAQS,EAAMJ,EAAG,CACnB,IAAMK,EAAO,KAAK,UAAUD,CAAI,EAC1BE,EAAO,IAAI,YAAY,EAAE,OAAOD,CAAI,EACpCE,EAAS,KAAK,eAAeP,CAAE,EAE/BQ,EAAY,MAAM,OAAO,OAAO,QAClC,CACI,KAAM,UACN,GAAID,CACR,EACA,KAAK,KACLD,CACJ,EAGA,OADe,KAAK,OAAO,aAAa,GAAG,IAAI,WAAWE,CAAS,CAAC,CAAC,CAEzE,CAEA,MAAM,QAAQJ,EAAMK,EAAS,CACzB,IAAMD,EAAY,KAAK,eAAeJ,CAAI,EACpCJ,EAAK,KAAK,eAAeS,CAAQ,EAEjCC,EAAY,MAAM,OAAO,OAAO,QAClC,CACI,KAAM,UACN,GAAAV,CACJ,EACA,KAAK,KACLQ,CACJ,EAEMH,EAAO,IAAI,YAAY,EAAE,OAAOK,CAAS,EAE/C,OADe,KAAK,MAAML,CAAI,CAElC,CACJ,EC3IqBM,EAArB,KAA0B,CACtB,YAAYC,EAAK,CACb,KAAK,KAAO,SAAS,cAAcA,CAAI,CAC3C,CAEA,GAAGC,EAAE,CACD,OAAA,KAAK,KAAK,GAAKA,EACR,IACX,CAEA,YAAYA,EAAE,CACV,OAAA,KAAK,KAAK,UAAU,IAAI,GAAGA,CAAC,EACrB,IACX,CAEA,KAAKA,EAAE,CACH,OAAA,KAAK,KAAK,YAAcA,EACjB,IACX,CAEA,KAAKA,EAAE,CACH,OAAA,KAAK,KAAK,KAAOA,EACV,IACX,CAEA,YAAYA,EAAE,CACV,OAAA,KAAK,KAAK,YAAcA,EACjB,IACX,CAEA,SAASA,EAAE,CACP,OAAA,KAAK,KAAK,SAAWA,EACd,IACX,CAEA,QAAQA,EAAE,CACN,OAAA,KAAK,KAAK,QAAUA,EACb,IACX,CAEA,IAAIA,EAAE,CACF,OAAA,KAAK,KAAK,IAAMA,EACT,IACX,CAEA,KAAKA,EAAE,CACH,OAAA,KAAK,KAAK,KAAOA,EACV,IACX,CAEA,UAAU,CACN,OAAA,KAAK,KAAK,SAAW,GACd,IACX,CAEA,OAAO,CACH,OAAA,KAAK,UAAU,IAAI,KAAK,KAAK,MAAM,CAAC,EAC7B,IACX,CAEA,MAAMA,EAAE,CACJ,OAAAA,EAAE,KAAK,IAAI,EACJ,IACX,CAEA,OAAOA,EAAE,CACL,OAAGA,aAAa,KAAK,YACjB,KAAK,KAAK,YAAYA,EAAE,IAAI,EAE5B,KAAK,KAAK,YAAYA,CAAC,EAEpB,IACX,CAEA,SAASA,EAAE,CACP,OAAGA,aAAa,KAAK,YACjBA,EAAE,KAAK,YAAY,KAAK,IAAI,EAE5BA,EAAE,YAAY,KAAK,IAAI,EAEpB,IACX,CAEA,KAAK,CACD,OAAO,KAAK,IAChB,CAEA,UAAUC,EAAG,CACT,GAAG,KAAK,KAAK,YACTA,EAAG,MACD,CACF,IAAMC,EAAW,IAAI,iBAAiB,IAAI,CACnC,KAAK,KAAK,cACTA,EAAS,WAAW,EACpBD,EAAG,EAEX,CAAC,EACDC,EAAS,QAAQ,SAAU,CAAC,UAAW,GAAM,QAAS,EAAI,CAAC,CAC/D,CACJ,CACJ,EClGqBC,EAArB,KAA6B,CACzB,YAAYC,EAAMC,EAAQ,CACtB,KAAK,KAAO,IAAIP,EAAK,GAAG,EACnB,SAAS,WAAYM,CAAI,EACzB,KAAKC,CAAO,EACZ,SAAS,SAAS,IAAI,EACtB,IAAI,EAET,WAAW,IAAI,CACX,SAAS,KAAK,YAAY,KAAK,IAAI,CACvC,EAAG,IAAI,CACX,CACJ,ECXqBC,EAArB,KAA4B,CACxB,YAAYC,EAAIpB,EAAII,EAAK,CACrB,KAAK,IAAMgB,EACX,KAAK,IAAMpB,EACX,KAAK,MAAQI,EAAK,KAClB,KAAK,SAAWA,EAAK,QACrB,KAAK,QAAUA,EAAK,OACpB,KAAK,OAASA,EAAK,MACnB,KAAK,YAAcA,EAAK,WACxB,KAAK,cAAgB,CAAC,CAC1B,CAEA,MAAM,UAAUiB,EAAMC,EAAO,CACzB,KAAK,QAAQ,KAAK,CACd,GAAI,OAAO,WAAW,EACtB,KAAMD,EACN,OAAQ,KAAK,QAAQC,CAAM,CAC/B,CAAC,EAED,MAAM,KAAK,KAAK,CACpB,CAEA,QAAQC,EAAI,CACR,OAAG,OAAOA,GAAQ,WAAUA,EAAM,OAAOA,CAAG,GAErC,KAAK,MAAMA,EAAM,GAAG,CAC/B,CAEA,MAAM,MAAM,CACR,IAAMnB,EAAO,KAAK,UAAU,CACxB,KAAM,KAAK,MACX,QAAS,KAAK,SACd,OAAQ,KAAK,QACb,MAAO,KAAK,OACZ,WAAY,KAAK,WACrB,CAAC,EACKoB,EAAgB,MAAM,kBAAkB,QAAQpB,EAAM,KAAK,GAAG,EAEhEqB,EACJ,GAAG,CACCA,EAAW,MAAM,MAAM,eAAgB,CACnC,OAAQ,MACR,QAAS,CAAC,eAAgB,kBAAkB,EAC5C,KAAM,KAAK,UAAU,CACjB,GAAI,KAAK,IACT,KAAMD,CACV,CAAC,CACL,CAAC,CACL,MAAS,CACL,IAAIR,EAAS,QAAS,+CAA+C,CACzE,CAEGS,EAAS,OAAO,IAAIT,EAAS,QAASS,EAAS,MAAM,OAAO,CACnE,CACJ,ECtDqBC,EAArB,KAAyB,CACrB,YAAYN,EAAIC,EAAMM,EAAOC,EAAW,CAAC,EAAE,CACvC,KAAK,IAAMR,EACX,KAAK,MAAQC,EACb,KAAK,OAASM,EACd,KAAK,UAAYC,EACjB,KAAK,gBAAkB,CAC3B,CAEA,IAAI,SAAS,CACT,OAAO,KAAK,UAAU,KAAK,eAAe,CAC9C,CAEA,aAAa,OAAOP,EAAMM,EAAOlC,EAAS,CACtC,IAAMoC,EAAevC,EAAkB,aAAa,EAEpD,MAAO,CACH,KAAM+B,EACN,MAAOM,EACP,cAAe,MAAMrC,EAAkB,aAAaG,EAAUoC,CAAY,EAC1E,cAAeA,EACf,gBAAiBvC,EAAkB,aAAa,CACpD,CACJ,CAEA,WAAWwC,EAAQ,CACf,KAAK,UAAU,KAAKA,CAAO,CAC/B,CAEA,cAAcA,EAAQ,CAClB,GAAG,OAAOA,GAAY,SAClB,KAAK,gBAAkB,UAClB,OAAOA,GAAY,UACxB,QAAQC,EAAI,EAAGA,EAAI,KAAK,UAAU,OAAQA,IACtC,GAAG,KAAK,UAAUA,CAAC,EAAE,KAAOD,EAAQ,CAChC,KAAK,gBAAkBC,EACvB,KACJ,MAGJ,SAAQA,EAAI,EAAGA,EAAI,KAAK,UAAU,OAAQA,IACtC,GAAG,KAAK,WAAWA,CAAC,IAAMD,EAAQ,CAC9B,KAAK,gBAAkBC,EACvB,KACJ,CAGZ,CAEA,MAAM,qBAAqBD,EAAQ,CAC/B,IAAM1B,EAAO,MAAM,kBAAkB,QAAQ0B,EAAQ,KAAMA,EAAQ,EAAE,EAE/DE,EAAa,IAAIb,EAAQW,EAAQ,GAAIA,EAAQ,GAAI1B,CAAI,EAC3D,KAAK,UAAU,KAAK4B,CAAU,CAClC,CACJ,ECxDqBC,EAArB,KAA0B,CACtB,YAAYC,EAAK,CACb,KAAK,UAAY,IAAIvB,EAAK,KAAK,EAC1B,GAAGuB,CAAI,EACP,SAAS,MAAM,EACf,SAAS,SAAS,IAAI,EACtB,IAAI,CACb,CAEA,OAAO,CACH,SAAS,KAAK,YAAY,KAAK,SAAS,CAC5C,CACJ,ECRqBC,EAArB,cAAmCF,CAAI,CACnC,aAAa,CACT,MAAM,OAAO,EAEb,KAAK,OAAO,CAChB,CAEA,MAAM,QAAQ,CACV,MAAM,eAAe,EAErB,IAAMN,EAAQ,KAAK,UAAU,cAAc,QAAQ,EAAE,MAC/ClC,EAAW,KAAK,UAAU,cAAc,WAAW,EAAE,MAE3D,MAAM,iBAAkB,CACpB,OAAQ,OACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,UAAU,CAAC,MAAAkC,CAAK,CAAC,CAChC,CAAC,EACI,KAAKS,GAAGA,EAAE,KAAK,CAAC,EAChB,KAAMX,GAAW,CACd,GAAGA,EAAS,MAAO,MAAMA,EAEzB,IAAIY,EAAc/C,EAAkB,aAAaG,EAAUgC,EAAS,aAAa,EACjF,OAAO,QAAQ,IAAI,CAACY,EAAaV,EAAOF,EAAS,aAAa,CAAC,CACnE,CAAC,EACA,KAAMrB,GACI,MAAM,kBAAmB,CAC5B,OAAQ,OACR,QAAS,CAAC,eAAgB,kBAAkB,EAC5C,KAAM,KAAK,UAAU,CACjB,cAAeA,EAAK,CAAC,EACrB,MAAOA,EAAK,CAAC,EACb,cAAeA,EAAK,CAAC,CACzB,CAAC,CACL,CAAC,CACJ,EACA,KAAKgC,GAAGA,EAAE,KAAK,CAAC,EAChB,KAAMX,GAAW,CACd,GAAGA,EAAS,MAAO,MAAMA,EAEzB,OAAA,OAAO,KAAO,IAAIC,EACdD,EAAS,GACTA,EAAS,KACTA,EAAS,MACTA,EAAS,QACb,EACOnC,EAAkB,OAAOG,EAAUgC,EAAS,eAAe,CACtE,CAAC,EACA,KAAMa,GAAoB,CACvB,OAAO,kBAAoBA,EAC3B,WAAW,MAAM,CACrB,CAAC,EACA,MAAOC,GAAM,CACPA,EAAI,MACH,IAAIvB,EAAS,QAASuB,EAAI,MAAM,OAAO,EAEvC,IAAIvB,EAAS,QAAS,+CAA+C,CAE7E,CAAC,CACT,CAEA,QAAQ,CACJ,IAAIL,EAAK,MAAM,EACV,SAAS,cAAc,EACvB,SAAS,KAAK,OAAO,KAAK,IAAI,CAAC,EAC/B,OAAO,IAAIA,EAAK,IAAI,EAChB,KAAK,OAAO,CACjB,EACC,OAAO,IAAIA,EAAK,OAAO,EACnB,KAAK,OAAO,EACZ,OAAO,IAAIA,EAAK,OAAO,EACnB,SAAS,OAAO,EAChB,KAAK,MAAM,EACX,YAAY,OAAO,EACnB,SAAS,EACT,MAAM,CACX,CACJ,EACC,OAAO,IAAIA,EAAK,OAAO,EACnB,KAAK,UAAU,EACf,OAAO,IAAIA,EAAK,OAAO,EACnB,SAAS,UAAU,EACnB,KAAK,UAAU,EACf,YAAY,UAAU,EACtB,SAAS,CACd,CACJ,EACC,OAAO,IAAIA,EAAK,QAAQ,EACpB,KAAK,OAAO,CACjB,EACC,OAAO,IAAIA,EAAK,QAAQ,EACpB,KAAK,gBAAgB,EACrB,SAAS,MAAM,EACf,KAAK,QAAQ,EACb,QAAQ,IAAI,CAAC,WAAW,UAAU,CAAC,CAAC,CACzC,EACC,SAAS,KAAK,SAAS,CAChC,CACJ,ECrGqB6B,EAArB,cAAsCP,CAAI,CACtC,aAAa,CACT,MAAM,UAAU,EAEhB,KAAK,OAAO,CAChB,CAEA,MAAM,QAAQ,CACV,MAAM,eAAe,EAErB,IAAMZ,EAAO,KAAK,UAAU,cAAc,OAAO,EAAE,MAC7CM,EAAQ,KAAK,UAAU,cAAc,QAAQ,EAAE,MAC/ClC,EAAW,KAAK,UAAU,cAAc,WAAW,EAAE,MACrDgD,EAAkB,KAAK,UAAU,cAAc,kBAAkB,EAAE,MAEzE,GAAG,CAAC,KAAK,aAAad,CAAK,EAAE,CACzB,IAAIX,EAAS,QAAS,uBAAuB,EAC7C,MACJ,CAEA,GAAGvB,EAAS,OAAS,GAAG,CACpB,IAAIuB,EAAS,QAAS,8CAA8C,EACpE,MACJ,CAEA,GAAGvB,IAAagD,EAAgB,CAC5B,IAAIzB,EAAS,QAAS,wBAAwB,EAC9C,MACJ,CAEA,MAAM,YAAa,CACf,OAAQ,OACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,UAAU,MAAMU,EAAK,OAAOL,EAAMM,EAAOlC,CAAQ,CAAC,CACjE,CAAC,EACI,KAAK2C,GAAGA,EAAE,KAAK,CAAC,EAChB,KAAMX,GAAW,CACd,GAAGA,EAAS,MAAO,MAAMA,EAEzB,OAAA,OAAO,KAAO,IAAIC,EACdD,EAAS,GACTA,EAAS,KACTA,EAAS,KACb,EACO,kBAAkB,OAAOhC,EAAUgC,EAAS,eAAe,CACtE,CAAC,EACA,KAAMa,GAAoB,CACvB,OAAO,kBAAoBA,EAC3B,WAAW,MAAM,CACrB,CAAC,EACA,MAAOC,GAAM,CACPA,EAAI,MACH,IAAIvB,EAAS,QAASuB,EAAI,MAAM,OAAO,EAEvC,IAAIvB,EAAS,QAAS,+CAA+C,CAE7E,CAAC,CACT,CAEA,aAAaW,EAAM,CAEf,MADc,6BACD,KAAKA,CAAK,CAC3B,CAEA,QAAQ,CACJ,IAAIhB,EAAK,MAAM,EACV,SAAS,cAAc,EACvB,SAAS,IAAI,CAAC,KAAK,OAAO,CAAC,CAAC,EAC5B,OAAO,IAAIA,EAAK,IAAI,EAChB,KAAK,UAAU,CACpB,EACC,OAAO,IAAIA,EAAK,OAAO,EACnB,KAAK,MAAM,EACX,OAAO,IAAIA,EAAK,OAAO,EACnB,SAAS,MAAM,EACf,KAAK,MAAM,EACX,YAAY,MAAM,EAClB,SAAS,EACT,MAAM,CACX,CACJ,EACC,OAAO,IAAIA,EAAK,OAAO,EACnB,KAAK,OAAO,EACZ,OAAO,IAAIA,EAAK,OAAO,EACnB,SAAS,OAAO,EAChB,KAAK,OAAO,EACZ,YAAY,OAAO,EACnB,SAAS,CACd,CACJ,EACC,OAAO,IAAIA,EAAK,OAAO,EACnB,KAAK,UAAU,EACf,OAAO,IAAIA,EAAK,OAAO,EACnB,SAAS,UAAU,EACnB,KAAK,UAAU,EACf,YAAY,UAAU,EACtB,SAAS,CACd,CACJ,EACC,OAAO,IAAIA,EAAK,OAAO,EACnB,KAAK,kBAAkB,EACvB,OAAO,IAAIA,EAAK,OAAO,EACnB,SAAS,iBAAiB,EAC1B,KAAK,UAAU,EACf,YAAY,kBAAkB,EAC9B,SAAS,CACd,CACJ,EACC,OAAO,IAAIA,EAAK,QAAQ,EACpB,KAAK,gBAAgB,CAC1B,EACC,OAAO,IAAIA,EAAK,QAAQ,EACpB,KAAK,QAAQ,EACb,SAAS,MAAM,EACf,KAAK,QAAQ,EACb,QAAQ,IAAI,CAAC,WAAW,OAAO,CAAC,CAAC,CACtC,EACC,SAAS,KAAK,SAAS,CAChC,CACJ,EC3HqB+B,EAArB,cAAkCT,CAAI,CAClC,aAAa,CACT,MAAM,MAAM,EAEZ,KAAK,OAAO,CAChB,CAEA,QAAQ,CACJ,IAAItB,EAAK,KAAK,EACT,SAAS,WAAW,EACpB,OAAO,IAAIA,EAAK,QAAQ,EACpB,KAAK,GAAG,EACR,SAAS,SAAU,QAAQ,EAC3B,QAAQ,IAAI,CAAC,WAAW,SAAS,CAAC,CAAC,CACxC,EACC,SAAS,KAAK,SAAS,CAChC,CACJ,ECjBqBgC,EAArB,cAAqCV,CAAI,CACrC,aAAa,CACT,MAAM,SAAS,EAEf,KAAK,OAAO,CAChB,CAEA,QAAQ,CACJ,IAAItB,EAAK,QAAQ,EACZ,KAAK,aAAa,EAClB,SAAS,QAAQ,EACjB,QAAQ,IAAI,CAAC,WAAW,eAAe,CAAC,CAAC,EACzC,SAAS,KAAK,SAAS,EAE5B,IAAIA,EAAK,QAAQ,EACZ,KAAK,YAAY,EACjB,SAAS,QAAQ,EACjB,QAAQ,IAAI,CAAC,WAAW,cAAc,CAAC,CAAC,EACxC,SAAS,KAAK,SAAS,CAChC,CACJ,EClBqBiC,EAArB,cAA2CX,CAAI,CAC3C,aAAa,CACT,MAAM,eAAe,EAErB,KAAK,OAAO,CAChB,CAEA,MAAM,QAAQ,CACV,MAAM,eAAe,EAErB,IAAM7B,EAAO,CACT,KAAM,KAAK,UAAU,cAAc,OAAO,EAAE,MAC5C,QAAS,KAAK,UAAU,cAAc,UAAU,EAAE,MAClD,OAAQ,CAAC,EACT,MAAO,CAAC,EACR,WAAY,CAAC,CACjB,EACMJ,EAAK,kBAAkB,WAAW,EAClCwB,EAAgB,MAAM,kBAAkB,QAAQpB,EAAMJ,CAAE,EAE9D,MAAM,eAAgB,CAClB,OAAQ,OACR,QAAS,CAAC,eAAgB,kBAAkB,EAC5C,KAAM,KAAK,UAAU,CACjB,KAAMwB,EACN,GAAIxB,CACR,CAAC,CACL,CAAC,EACI,KAAKoC,GAAGA,EAAE,KAAK,CAAC,EAChB,KAAMX,GAAW,CACd,GAAGA,EAAS,MAAO,MAAMA,EAEzB,IAAMK,EAAU,IAAIX,EAAQM,EAAS,GAAIzB,EAAII,CAAI,EACjD,KAAK,WAAW0B,CAAO,EACvB,KAAK,cAAcA,CAAO,EAC1B,WAAW,MAAM,CACrB,CAAC,EACA,MAAOS,GAAM,CACV,QAAQ,IAAIA,CAAG,EACZA,EAAI,MACH,IAAIvB,EAAS,QAASuB,EAAI,MAAM,OAAO,EAEvC,IAAIvB,EAAS,QAAS,+CAA+C,CAE7E,CAAC,CACT,CAEA,QAAQ,CACJ,IAAIL,EAAK,MAAM,EACV,SAAS,cAAc,EACvB,SAAS,KAAK,OAAO,KAAK,IAAI,CAAC,EAC/B,OAAO,IAAIA,EAAK,IAAI,EAChB,KAAK,gBAAgB,CAC1B,EACC,OAAO,IAAIA,EAAK,OAAO,EACnB,KAAK,cAAc,EACnB,OAAO,IAAIA,EAAK,OAAO,EACnB,KAAK,MAAM,EACX,SAAS,MAAM,EACf,YAAY,cAAc,EAC1B,SAAS,EACT,MAAM,CACX,CACJ,EACC,OAAO,IAAIA,EAAK,OAAO,EACnB,KAAK,iBAAiB,EACtB,OAAO,IAAIA,EAAK,OAAO,EACnB,KAAK,QAAQ,EACb,SAAS,SAAS,EAClB,YAAY,iBAAiB,EAC7B,IAAI,GAAG,EACP,KAAK,MAAM,EACX,SAAS,CACd,CACJ,EACC,OAAO,IAAIA,EAAK,QAAQ,EACpB,KAAK,QAAQ,CAClB,EACC,OAAO,IAAIA,EAAK,QAAQ,EACpB,KAAK,QAAQ,EACb,KAAK,QAAQ,EACb,SAAS,QAAQ,EACjB,QAAQ,IAAI,CAAC,WAAW,MAAM,CAAC,CAAC,CACrC,EACC,SAAS,KAAK,SAAS,CAChC,CACJ,ECxFqBkC,EAArB,cAA0CZ,CAAI,CAC1C,aAAa,CACT,MAAM,cAAc,EAEpB,KAAK,OAAO,CAChB,CAEA,MAAM,OAAOa,EAAM,CACfA,EAAM,eAAe,EAErB,MAAM,KAAK,QAAQ,UACf,KAAK,UAAU,cAAc,OAAO,EAAE,MACtC,KAAK,UAAU,cAAc,SAAS,EAAE,KAC5C,EACA,WAAW,MAAM,CACrB,CAEA,QAAQ,CACJ,IAAInC,EAAK,MAAM,EACV,SAAS,cAAc,EACvB,SAAS,KAAK,OAAO,KAAK,IAAI,CAAC,EAC/B,OAAO,IAAIA,EAAK,IAAI,EAChB,KAAK,eAAe,CACzB,EACC,OAAO,IAAIA,EAAK,OAAO,EACnB,KAAK,MAAM,EACX,OAAO,IAAIA,EAAK,OAAO,EACnB,KAAK,MAAM,EACX,SAAS,MAAM,EACf,YAAY,MAAM,EAClB,SAAS,EACT,MAAM,CACX,CACJ,EACC,OAAO,IAAIA,EAAK,OAAO,EACnB,KAAK,QAAQ,EACb,OAAO,IAAIA,EAAK,OAAO,EACnB,KAAK,QAAQ,EACb,SAAS,QAAQ,EACjB,YAAY,QAAQ,EACpB,IAAI,GAAG,EACP,KAAK,MAAM,EACX,SAAS,CACd,CACJ,EACC,OAAO,IAAIA,EAAK,QAAQ,EACpB,KAAK,QAAQ,CAClB,EACC,OAAO,IAAIA,EAAK,QAAQ,EACpB,KAAK,QAAQ,EACb,SAAS,QAAQ,EACjB,KAAK,QAAQ,EACb,QAAQ,IAAI,CAAC,WAAW,MAAM,CAAC,CAAC,CACrC,EACC,SAAS,KAAK,SAAS,CAChC,CACJ,ECjDMoC,EAAQ,SAAS,cAAc,OAAO,EACxCC,EAEJ,OAAO,WAAa,CAACd,EAAM9B,IAAO,CAI9B,OAHA,QAAQ,KAAK,aAAa,EAC1B4C,EAAY,MAAM,EAEXd,EAAK,CACR,IAAK,QAASc,EAAc,IAAIb,EAAS,MACzC,IAAK,WAAYa,EAAc,IAAIR,EAAY,MAC/C,IAAK,OAAQQ,EAAc,IAAIN,EAAQ,MACvC,IAAK,UAAWM,EAAc,IAAIL,EAAW,MAC7C,IAAK,gBAAiBK,EAAc,IAAIJ,EAAiB,MACzD,IAAK,eAAgBI,EAAc,IAAIH,EAAgB,KAC3D,CACA,QAAQ,QAAQ,aAAa,CACjC,EAEA,MAAM,YAAa,CACf,OAAQ,MACR,QAAS,CAAC,eAAgB,kBAAkB,CAChD,CAAC,EACI,KAAKT,GAAGA,EAAE,KAAK,CAAC,EAChB,KAAMX,GAAW,CACd,GAAGA,EAAS,MAAO,MAAMA,EAEzB,OAAA,OAAO,KAAO,IAAIC,EACdD,EAAS,GACTA,EAAS,KACTA,EAAS,KACb,EAEO,QAAQ,IAAI,CAACnC,EAAkB,kBAAkB,EAAGmC,EAAS,QAAQ,CAAC,CACjF,CAAC,EACA,KAAK,CAAC,CAACjC,EAAKoC,CAAQ,IAAI,CACrB,OAAO,kBAAoB,IAAItC,EAAkBE,CAAG,EAEpD,IAAIyD,EAAW,CAAC,EAChB,QAAQlB,EAAI,EAAGA,EAAIH,EAAS,OAAQG,IAChCkB,EAAS,KAAK,KAAK,qBAAqBrB,EAASG,CAAC,CAAC,CAAC,EAGxD,OAAO,QAAQ,IAAIkB,CAAQ,CAC/B,CAAC,EACA,KAAMxB,GAAW,CACduB,EAAc,IAAIN,CACtB,CAAC,EACA,MAAOH,GAAM,CACVS,EAAc,IAAIb,CACtB,CAAC,CAAA,GAAA",
  "names": ["EncryptionHandler", "_EncryptionHandler", "key", "password", "salt", "raw", "hash", "encoder", "baseKey", "derivedBits", "iv", "str", "c", "passwordKey", "data", "json", "buff", "buffIv", "encrypted", "ivString", "decrypted", "Elem", "elem", "v", "cb", "observer", "Notifier", "type", "message", "Account", "id", "name", "amount", "num", "encryptedData", "response", "User", "email", "accounts", "passwordSalt", "account", "i", "newAccount", "Page", "page", "Login", "r", "hashPromise", "encryptionHandler", "err", "Register", "confirmPassword", "Home", "AddMenu", "CreateAccount", "CreateIncome", "event", "pages", "currentPage", "promises"]
}
